1. What do you understand By Database.
-A database is a structured collection of data that is organized in such a way that it can be easily accessed, managed, and updated. It typically stores into tables, rows, columns, and index it to make it easier to find relevant information.

2. What is Normalization?
-Normalization is the process of minimizing redundancy from a relation or set of relations. Redundancy in relation may cause insertion, deletion, and update anomalies. Normalization divides the larger table into smaller and links them using relationships.The normal form is used to reduce redundancy from the database table.

Types of Normal Forms:
1NF:- Each table cell should contain only a single value, and each column should have a unique name. 

2NF:-  A relation will be in 2NF if it is in 1NF. Each column should be directly related to the primary key, and not to other columns.

3NF:- 3NF builds on 2NF.Each column should be directly related to the primary key, and not to any other columns in the same table.

BCNF:- A stronger definition of 3NF is known as Boyce Codd's normal form.

3. What is Difference between DBMS and RDBMS?
DBMS								RDBMS
DBMS stores data as file.					RDBMS stores data in tabular form.
Data elements need to access individually.			Multiple data elements can be accessed at the same time.
No relationship between data.					Data is stored in the form of tables which are related to each other.
Normalization is not present.					Normalization is present.
DBMS does not support distributed database.			RDBMS supports distributed database.
It stores data in either a navigational or hierarchical form. 	It uses a tabular structure where the headers are the column names, and the rows contain corresponding values.
It deals with small quantity of data.				It deals with large amount of data.
Data redundancy is common in this model.			Keys and indexes do not allow Data redundancy.
It is used for small organization and deal with small data.	It is used to handle large amount of data.
Not all Codd rules are satisfied.				All 12 Codd rules are satisfied.
Security is less						More security measures provided.
It supports single user.					It supports multiple users.
Data fetching is slower for the large amount of data.		Data fetching is fast because of relational approach.
Low software and hardware necessities.				Higher software and hardware necessities.
Examples: XML, Window Registry, Forxpro, dbaseIIIplus etc.	Examples: MySQL, PostgreSQL, SQL Server, Oracle, Microsoft Access etc.

4. What is MF Cod Rule of RDBMS Systems?
-Coddâ€™s rules are proposed by a computer scientist named Dr. Edgar F. Codd and he also invent the relational model for database management. These rules are made to ensure data integrity, consistency, and usability. This set of rules basically signifies the characteristics and requirements of a relational database management system RDBMS.

One of the fundamental rules often cited is the ACID properties, which stands for:

Atomicity: Ensures that all operations within a transaction are completed successfully, or none of them are.

Consistency: Ensures that the database remains in a consistent state before and after the transaction.

Isolation: Ensures that the operations in a transaction are isolated from other transactions until they are completed.

Durability: Ensures that once a transaction is committed, its changes are permanently stored in the database even in the event of a system failure



5. What do you understand By Data Redundancy?
-Data redundancy is when multiple copies of the same information are stored in more than one place at a time.
The consequences of data redundancy include errors that are unacceptable to customers and businesses.


6. What is DDL Interpreter?
-Data Definition Language (DDL) statements are used to define the structure of the database schema.
 This includes creating and modifying database objects such as tables, indexes, views, and constraints. 
Examples of DDL statements include CREATE, ALTER, DROP, TRUNCATE, etc.

DDL statements:-

CREATE: Used to create new database objects like tables, views, indexes, etc.

ALTER: Modifies the structure of existing database objects.

DROP: Deletes database objects (tables, views, indexes, etc.) from the database.

TRUNCATE: Removes all records from a table without removing the table structure itself.

7. What is DML Compiler in SQL?
-A DML (data manipulation language) refers to a computer programming language that allows you to add (insert), delete (delete), and alter (update) data in a database. 
These statements allow users and applications to interact with the data stored in tables within the database. 

DML statements:-
INSERT: Adds new rows of data into a table.
UPDATE: Modifies existing data within a table.
DELETE: Removes rows of data from a table.


8. What is SQL Key Constraints writing an Example of SQL Key Constraints.
-SQL constraints are used to specify rules for the data in a table.

1. Primary Key Constraint: Ensures each row in a table is uniquely identified by a column or a set of columns.

2. Foreign Key Constraint: Establishes and maintains a relationship between two tables by referencing the primary key of one table in another table.

3. Unique Constraint: Ensures all values in a column or a group of columns are distinct.

4. Check Constraint: Specifies conditions that column values must satisfy for a row to be inserted or updated.

9. What is save Point? How to create a save Point write a Query?
-SAVEPOINT creates points within the groups of transactions in which to ROLLBACK. 
It is a point in a transaction in which you can roll the transaction back to a certain point without rolling back the entire transaction. 
Syntax: 
SAVEPOINT SAVEPOINT_NAME;

This command is used only in the creation of SAVEPOINT among all the transactions. 
In general ROLLBACK is used to undo a group of transactions. 
Syntax for rolling back to Savepoint Command: 
ROLLBACK TO SAVEPOINT_NAME;

you can ROLLBACK to any SAVEPOINT at any time to return the appropriate data to its original state.


10.What is trigger and how to create a Trigger in SQL?
-A trigger is a stored procedure in a database that automatically invokes whenever a special event in the database occurs. 
For example, a trigger can be invoked when a row is inserted into a specified table or when specific table columns are updated. 
In simple words, a trigger is a collection of SQL statements with particular names that are stored in system memory. 

Syntax:

create trigger [trigger_name] 

[before | after]  

{insert | update | delete}  

on [table_name]  

[for each row]  

[trigger_body] 